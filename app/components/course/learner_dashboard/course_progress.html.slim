.course-progress
  .course-progress__items
    .course-progress__item
      - if graded_percentage.present?
        = render Course::CircularProgress.new(graded_percentage, "#{graded_percentage}%", :small)
      - else
        = render Course::CircularProgress.new(graded_percentage, EMPTY_STATE, :small)
      .course-progress__overall-score
        span.course-progress__overall-score-title = t(:'course.progress.graded_score')
        - if graded_score.present?
            .course-progress__overall-graded-score
              = graded_score
              - if bonus_points.present?
                span data-tooltip=t(:'course.progress.bonus_points', count: main_points, bonus_points:)
                  = render Global::FaIcon.new('circle-info')
        - else
          span = EMPTY_STATE

    .course-progress__item
      - if selftest_percentage.present?
        = render Course::CircularProgress.new(selftest_percentage, "#{selftest_percentage}%", :small)
      - else
        = render Course::CircularProgress.new(selftest_percentage, EMPTY_STATE, :small)
      .course-progress__overall-score
        span.course-progress__overall-score-title = t(:'course.progress.selftest_score')
        - if selftest_score.present?
          span = selftest_score
        - else
          span = EMPTY_STATE

    .course-progress__item
      - if completed_items_percentage.present?
        = render Course::CircularProgress.new(completed_items_percentage, "#{completed_items_percentage}%", :small)
      - else
        = render Course::CircularProgress.new(completed_items_percentage, EMPTY_STATE, :small)
      .course-progress__overall-score
        span.course-progress__overall-score-title = t(:'course.progress.completed_score')
        - if items_available.positive?
          span = t(:'course.progress.completed', completed: completed_items_count, available: items_available)
        - else
          span = EMPTY_STATE

.sections-progress
  - @section_progresses.each do |section_progress|
    = render Course::LearnerDashboard::SectionProgress::Main.new(section_progress, @course)
